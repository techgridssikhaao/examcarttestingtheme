
<!-- Add the Swiper CSS styles -->
<link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css">





{% assign product_collection = section.settings.collection %}
<style>


 /* .swiper-slide {
  display: flex;
}


.swiper-container {
  overflow: hidden;
}
 */
  
</style>

<div
  class="tt_tabsproduct_module tabs-category-slider list-module {% if section.settings.listing_rows != 1 %} multi-rows {% endif %}"
  id="product_module{{section.id}}"
  style="text-align: left;   "
>
  <div
    class="module-title"
    style="
      justify-content: space-between;
      padding-bottom: 0px;
      display: flex;
      align-items: center;
    "
  >
    {% if section.settings.heading != blank %}
      <h2 style="margin: 0px;">{{ section.settings.heading }}</h2>
      <span section-name="{{ section.settings.heading }}" onclick="collectionUrls(this)">
        <svg
          style="height: 3rem; width: 2rem;  fill: gray;     display: grid;"
          aria-hidden="true"
          focusable="false"
          data-prefix="far"
          data-icon="angle-right"
          role="img"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 320 512"
          class="svg-inline--fa fa-angle-right fa-4x"
        >
          <path  d="M273 239c9.4 9.4 9.4 24.6 0 33.9L113 433c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l143-143L79 113c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0L273 239z" class=""></path>
        </svg>
      </span>
    {% endif %}
    <div class="box-tab">
      <ul class="tab-heading tabs-categorys">
        <li>
          <a data-toggle="pill" href="#tab-{{section.id}}0">
            <span>{{ section.settings.heading }}</span>
          </a>
        </li>
      </ul>
    </div>
  </div>
<div class="box-style">
  <div class="swiper-container tab-container-{{section.id}}">
    <div class="swiper-wrapper">
      {% for product in collections[product_collection].products %}
        <div class="swiper-slide">
          <div class="tt-product">
            <div class="tab-content">
              <div class="tab-product-container">
                <div class="row_items {% cycle 'odd','even' %}">
                  {% include 'product-grid-item-list' %}
                </div>
              </div>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</div>
  </div>

<!-- Add the Swiper JS script -->
<script async src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>


 <script>
	function initSwiper() {
  var sectionId = "{{section.id}}";
  var noOfProducts = {{ section.settings.no_of_products }};
  var swiper = new Swiper(".swiper-container", {
    slidesPerView: noOfProducts,
    loop: false,
    swipeToSlide: true,
      freeMode: true,
    effect: "slide",
    speed: 600,
    navigation: {
      prevEl: ".your-prev-arrow-selector",
      nextEl: ".your-next-arrow-selector",
    },
    breakpoints: {
      1600: { slidesPerView: noOfProducts },
      1200: { slidesPerView: noOfProducts },
      992: { slidesPerView: 6 },
      768: { slidesPerView: 5, navigation: false },
      500: { slidesPerView: 4, navigation: true },
      0: { slidesPerView: 3, navigation: false },
    },
    pagination: {
      el: ".swiper-pagination",
    },
  });
}

// Initialize Swiper on page load
initSwiper();

// Reinitialize Swiper when the window is resized
window.addEventListener("resize", function () {
  // Destroy the previous Swiper instance
  if (window.mySwiper) {
    window.mySwiper.destroy();
  }
  // Initialize a new Swiper instance
  initSwiper();
});


</script>


<script>
   function collectionUrls(ref){
        console.log(ref);
       sectionTitle= ref.getAttribute('section-name');

     switch (sectionTitle){

        case 'all exams books':  {
            location.href='https://examcart.in/collections/all-exam-books'
             break;

         }
       case 'central exams':{
         location.href='https://examcart.in/collections/central-exams'


         break;
       }
          case 'bihar':{
         location.href='https://examcart.in/collections/bihar'
            break;
       }
          case 'haryana':{
         location.href='https://examcart.in/collections/haryana'
            break;
       }

          case 'jharkhand':{
       location.href='https://examcart.in/collections/jharkhand'
            break;
     }
          case 'chattisgarh':{
       location.href='https://examcart.in/collections/chattisgarh'
            break;
     }
          case 'uttar pradesh':{
       location.href='https://examcart.in/collections/uttar-pradesh'
            break;
     }
  case 'rajasthan':{
       location.href='https://examcart.in/collections/rajasthan'
    break;
     }

  case 'madhya pradesh':{
       location.href='https://examcart.in/collections/madhya-pradesh'
    break;
     }
          case 'delhi':{
       location.href='https://examcart.in/collections/delhi'
            break;
     }

     }
   }
</script>
<!--
  <script >



    $(document).ready(function() {
      $('a[href="#tab-{{section.id}}0"]').trigger( "click" );
        $(".tab-container-{{section.id}}").owlCarousel({
        items: {{ section.settings.no_of_products }},
        loop:  false ,
        margin:  10 ,
        nav:  false ,
        dots:  false ,
        autoplay:   false ,
        autoplayTimeout:  1000 ,
        autoplayHoverPause: true,
        autoplaySpeed:  1000 ,
        navSpeed:  1000 ,
        dotsSpeed:  1000 ,
           smartSpeed: 0,
        lazyLoad: false,
        responsive:{
        0:{
        items: 3,
        nav: false
        },
        500:{
        items: 3,
        nav: false
        },
        768:{
        items: 4
        },
        992:{
        items: 5
        },
        1200:{
        items: {{ section.settings.no_of_products }}
        },
        1600:{
        items: {{ section.settings.no_of_products }}
        }
        },
        onInitialized: function() {
        var count = $(".tab-container-{{section.id}} .owl-item.active").length;
                      if(count == 1) {
          $(".tab-container-{{section.id}} .owl-item").removeClass('first');
            $(".tab-container-{{section.id}} .owl-item.active").addClass('first');
            } else {
            $(".tab-container-{{section.id}} .owl-item").removeClass('first');
            $(".tab-container-{{section.id}} .owl-item.active:first").addClass('first');
            }
            },
            onTranslated: function() {
            var count = $(".tab-container-{{section.id}} .owl-item.active").length;
                          if(count == 1) {
              $(".tab-container-{{section.id}} .owl-item").removeClass('first');
                $(".tab-container-{{section.id}} .owl-item.active").addClass('first');
                } else {
                $(".tab-container-{{section.id}} .owl-item").removeClass('first');
                $(".tab-container-{{section.id}} .owl-item.active:first").addClass('first');
                }
                }
                });
            });



  </script>
-->
<!--
  <script>
    $(document).ready(function() {
    $('a[href="#tab-{{section.id}}0"]').trigger( "click" );
      const carousel = $(".owl-carousel-1 ").owlCarousel({
        items: {{ section.settings.no_of_products }},
        loop: true,
        margin: 10,
        nav: true,
        responsive: {
          0: { items: {{ section.settings.no_of_products }} },
          600: { items: {{ section.settings.no_of_products }} },
          1000: { items: {{ section.settings.no_of_products }} }
        }
      });

      let isDragging = false;
      let startX = 0;
      let currentTranslate = 0;
      let prevTranslate = 0;

  // const containerWidth = carousel.width();
      // console.log(carousel.width())
      // console.log(carousel.length)
      // const carouselContainer = carousel.find('.owl-stage');

      function handleDragStart(e) {
        isDragging = true;
        startX = e.clientX || e.touches[0].clientX;
        prevTranslate = currentTranslate;
        carousel.css('transition', 'none'); // Disable transitions while dragging
      }

      function handleDragMove(e) {
        if (!isDragging) return;
        const moveX = (e.clientX || e.touches[0].clientX) - startX;
         const carouselWidth = carousel.width();
        const itemsWidth = carousel.find('.owl-item').width() * carousel.find('.owl-item').length;
        const minTranslate = carouselWidth - itemsWidth;
        const maxTranslate = 0;

        currentTranslate = prevTranslate + moveX;
        currentTranslate = Math.max(Math.min(currentTranslate, maxTranslate), minTranslate);
        carousel.css('transform', `translateX(${currentTranslate}px)`);
      }

      function handleDragEnd() {
        if (isDragging) {
          isDragging = false;
          prevTranslate = currentTranslate;
          carousel.css('transition', ''); // Re-enable transitions
        }
      }

      // Touch events for mobile devices
      carousel[0].addEventListener('touchstart', handleDragStart, false);
      carousel[0].addEventListener('touchmove', handleDragMove, false);
      carousel[0].addEventListener('touchend', handleDragEnd, false);

      // Mouse events for desktops
      carousel[0].addEventListener('mousedown', handleDragStart, false);
      document.addEventListener('mousemove', handleDragMove, false);
      document.addEventListener('mouseup', handleDragEnd, false);
    });
  </script>
-->
